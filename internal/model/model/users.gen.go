// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.
// Code generated by gorm.io/gen. DO NOT EDIT.

package model

import "go_project/internal/constants"

const TableNameUser = "users"

// User 用户表
type User struct {
	UserID    int64  `gorm:"column:user_id;type:int(11);primaryKey;autoIncrement:true;comment:用户ID" json:"user_id"` // 用户ID
	UserName  string `gorm:"column:user_name;type:varchar(50);not null;comment:用户名" json:"user_name"`               // 用户名
	Password  string `gorm:"column:password;type:varchar(100);not null;comment:密码" json:"password"`                 // 密码
	Email     string `gorm:"column:email;type:varchar(100);not null;comment:邮箱" json:"email"`                       // 邮箱
	Phone     string `gorm:"column:phone;type:varchar(50);not null;comment:手机号" json:"phone"`                       // 手机号
	Points    int64  `gorm:"column:points;type:int(11);not null;comment:积分" json:"points"`                          // 积分
	RoleType  int64  `gorm:"column:role_type;type:int(11);not null;comment:角色类型:1学生，2管理员" json:"role_type"`         // 角色类型:1学生，2管理员
	CreatedAt int64  `gorm:"column:created_at;type:int(11);not null;comment:创建时间" json:"created_at"`                // 创建时间
	UpdatedAt int64  `gorm:"column:updated_at;type:int(11);not null;comment:更新时间" json:"updated_at"`                // 更新时间
	Status    int64  `gorm:"column:status;type:int(11);not null;comment:状态:0正常、1禁用" json:"status"`                  // 状态:0正常、1禁用
}

// TableName User's table name
func (*User) TableName() string {
	return TableNameUser
}

func GetRoleType(roleyType int64) (string, error) {
	switch roleyType {
	case constants.StudentRole:
		return "学生", nil
	case constants.AdminRole:
		return "管理员", nil
	default:
		return constants.RoleTypeNotExist.Annotate, nil
	}

}
